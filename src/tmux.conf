# Set the TMUX_VERSION envvar
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Colors
set -g default-terminal "tmux-256color"

# Misc
set -g base-index 1
setw -g pane-base-index 1

# Change prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Remove delay
set -sg escape-time 0
set -g status-interval 1

# Set automatic window title
setw -g automatic-rename off
setw -g monitor-activity on

set -g history-limit 100000

# Enable mouse
set -g -q mouse on

# Vi keybindings in copy mode
setw -g mode-keys vi

# Include bindings

# Pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resize
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Window creation
bind-key t new-window -c "#{pane_current_path}"

# Pane creation
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -c "#{pane_current_path}"

# Maximize/Minimize
unbind Up
bind Up new-window -d -n tmp \; swap-pan -s tmp \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Copy mode as vim
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

if-shell -b '[ "$(echo "$TMUX_VERSION <= 2.3" | sed -e "s/[a-z]\+//g" bc)" = 1  ]' \
    'bind-key -t vi-copy "v" begin-selection; \
     bind-key -t vi-copy "y" copy-pipe "xclip -in -selection clipboard"; \
    '

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | sed -e "s/[a-z]\+//g" | bc)" = 1  ]' \
    'bind -T copy-mode-vi "v" send-keys -X begin-selection; \
     bind -T copy-mode-vi "y" send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"; \
    '

# Move pane up on scroll
bind -n WheelUpPane \
    if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# Include custom commands

# Reload configuration
bind r \
    source-file ~/.tmux.conf \; display "Reloaded!"

# Status line theme
if-shell "ls $HOME/.config/tmux/theme.conf" "source $HOME/.config/tmux/theme.conf"

set -g message-style                bg=colour0,fg=colour12,bright
set -g pane-active-border-style     fg=colour10
set -g pane-border-style            fg=colour0
set -g status-style                 bg=colour0,fg=white
set -g window-status-activity-style none
set -g window-status-bell-style     none
set -g window-status-separator      ""

# Separators:
set -g status-left                  "#[fg=colour0]#{?client_prefix,#[bg=colour10],#[bg=colour12]} #S #[fg=colour12]#{?client_prefix,#[fg=colour10],#[fg=colour12]}#[bg=colour0]"
set -g status-right                 "#{?client_prefix,#[fg=colour10],#[fg=colour12]} %H:%M:%S #[bg=colour0]#{?client_prefix,#[fg=colour10],#[fg=colour12]}#{?client_prefix,#[bg=colour10]#[fg=colour0],#[bg=colour12,fg=colour0]} %y/%m/%d "
set -g window-status-format         "#[bg=colour0] #{?client_prefix,#[fg=colour10],#[fg=colour#(echo #I % 7 + 1 | bc)]}#{?window_bell_flag,!, }#I#{?window_zoomed_flag,⁺, }#W "
set -g window-status-current-format "#[fg=colour0]#{?client_prefix,#[bg=colour10],#[bg=colour#(echo #I % 7 + 1 | bc)]}#[fg=colour0]#{?client_prefix,#[bg=colour10],#[bg=colour#(echo #I % 7 + 1 | bc)]}#{?window_bell_flag,!, }#I#{?window_zoomed_flag,⁺, }#W #[bg=colour0]#{?client_prefix,#[fg=colour10],#[fg=colour#(echo #I % 7 + 1 | bc)]}"
